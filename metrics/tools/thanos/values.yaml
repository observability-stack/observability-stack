existingObjstoreSecret: "thanos-objectstorage" # expecting a kubernetes secret with this name to connect existing s3 bucket for data storage.
# clusterDomain: observer-cluster.local # this is kubernetes.local by default. if you changed the domain name during the cluster deploy, set this field to match that.
query:
  enabled: true
  replicaLabel:
    - "prometheus_replica"
    - "rule_replica"
  dnsDiscovery:
    sidecarsService: "prometheus-operated"
    sidecarsNamespace: "cattle-monitoring-system"
  sidecars:
    - name: observer-envoy-sidecar
      args:
        - "-c"
        - /config/envoy.yaml
      image: "envoyproxy/envoy:v1.16.0"
      ports:
        - name: envoy-eo4eu-ope
          containerPort: 10000
          protocol: TCP
        - name: envoy-aiml
          containerPort: 10001
          protocol: TCP
        - name: envoy-inference
          containerPort: 10002
          protocol: TCP
        - name: envoy-mgmnt-ope
          containerPort: 10003
          protocol: TCP
      volumeMounts:
        - name: envoy-config
          mountPath: "/config"
          mountPropagation: None
  extraVolumes:
    - name: envoy-config
      configMap:
        name: thanos-envoy-config
        defaultMode: 420
        optional: false
# If you are using envoy sidecar to query data from prometheus sidecar from observee cluster, uncomment the next field
#  stores:
#    - "dnssrv+_envoy-<observee-cluster01>._tcp.thanos-envoy-sidecar.thanos-system.svc.<clusterdomain>.local"
#    - "dnssrv+_envoy-<observee-cluster02>._tcp.thanos-envoy-sidecar.thanos-system.svc.<clusterdomain>.local"
  nodeSelector: "kubernetes.io/os: linux"
  serviceAccount:
    create: true
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPU: 90
queryFrontend:
  enabled: true
  nodeSelector: "kubernetes.io/os: linux"
  # podSecurityContext:
  #   enabled: false
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPU: 90
compactor:
  enabled: true
  nodeSelector: "kubernetes.io/os: linux"
  # podSecurityContext:
  #   enabled: false
storegateway:
  enabled: true
  nodeSelector: "kubernetes.io/os: linux"
  # podSecurityContext:
  #   enabled: false
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPU: 90
# receive:
#   enabled: true
#   autoscaling:
#     enabled: true
#     minReplicas: 1
#     maxReplicas: 10
#     targetCPU: 90
metrics:
  enabled: true # enable for thanos metrics monitoring.
  serviceMonitor:
    enabled: true # serviceMonitor for Prometheus
    namespace: "thanos-system"
minio:
  enabled: false
networkPolicy:
  enabled: false
